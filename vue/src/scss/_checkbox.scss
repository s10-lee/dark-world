@mixin check-size($size, $size-mul, $font-size, $border-radius) {
  $padding-right: $border-radius + $size + $font-size + $size;

  padding: $size $font-size $size $padding-right;
  @include font-size($font-size);

  .mark {
    top: 50%;
    width: $size + $font-size;
    height: $size + $font-size;
    border-radius: $border-radius;
    transform: translateY(-50%);
  }
  .mark:after {
    width: $font-size * $size-mul;
    height: $font-size * $size-mul;
  }
}

.check {
  cursor: pointer;
  display: inline-block;
  position: relative;
  @include check-size($input-btn-padding-y, .75, $font-size-base, $border-radius);

  .mark {
    left: 0;
    position: absolute;
    background-color: transparent;
    border: $input-border-width solid $input-border-color;
    transition: all .25s ease-in-out;
    &:after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform-origin: top left;
      transform: scale(0) translate(-50%, -50%);

      // width: $font-size-base;
      /// height: $font-size-base;
      display: block;
      opacity: 0;
      background: no-repeat url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23ccc' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
      transition: .235s opacity ease-out, .235s transform ease-in-out;
    }
  }
}

.check input:checked ~ .mark {
  background: darken($primary, 10);
  border-color: transparent;
  &:after{
    opacity: 1;
    transform: scale(1) translate(-50%, -50%);
    transition: .235s opacity ease-out, .235s transform ease-out;
  }

}
.check input {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
}

.check-lg {
  @include check-size($input-btn-padding-y-lg, 1, $font-size-lg, $border-radius-lg);
}