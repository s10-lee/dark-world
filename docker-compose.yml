version: "3"

services:
  db:
    container_name: db
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/dev/postgres/Dockerfile
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - local_net

#  redis:
#    container_name: redis
#    build:
#      context: .
#      dockerfile: ./docker/dev/redis/Dockerfile
#    restart: always
#    ports:
#      - 9000:9000
#    networks:
#      - app-network

  app:
    container_name: app
    restart: always
    build:
      context: .
      dockerfile: ./docker/dev/fastapi/Dockerfile
    volumes:
      - static-files:/app/src/static
    environment:
      APP_NAME: ${APP_NAME}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      ALGORITHM: ${ALGORITHM}
      INTERVAL: ${INTERVAL}
    ports:
      - 8000:8000
    depends_on:
      - db
    networks:
      - local_net

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/dev/nginx/Dockerfile
    volumes:
      - static-files:/app/src/static
      - web-root:/usr/share/nginx/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    networks:
      - local_net

networks:
  local_net:
    driver: bridge


volumes:
  static-files:
  postgres_data:
  web-root:
  certbot-etc:
  certbot-var:
